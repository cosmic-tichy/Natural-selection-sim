;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-advanced-reader.ss" "lang")((modname evolution_sim_scrapped) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #t #t none #f () #f)))

(define fast-sim (make-traits 4 6 7 2))
(define slow-sim (make-traits 1 3 10 4))
(define traits1 (make-traits 2 8 4 10))
(define traits2 (make-traits 3 12 5 7))

; a sim is a (make-sim pworld traits)

(define-struct sim [pworld traits])

(define sim1 (make-sim pworld1 traits1))
(define sim2 (make-sim pworld4 slow-sim))
(define sim3 (make-sim pworld2 fast-sim))
(define sim4 (make-sim pworld5 fast-sim))
(define sim5 (make-sim pworld5 traits2))
(define sim6 (make-sim pworld5 traits1))


(define (move-player pw s)
  (cond [(>=(posn-x(pworld-p pw)) width)
         (make-pworld
          (approach (pworld-p pw) (make-posn (-(posn-x(pworld-goal pw))
                                               (* 2(posn-x(pworld-goal pw))))
                                             (posn-y(pworld-goal pw)))s)
          (make-posn (-(posn-x(pworld-goal pw)) (* 2(posn-x(pworld-goal pw))))
                     (posn-y(pworld-goal pw))))]

        [(<=(posn-x(pworld-p pw)) 0)
         (make-pworld
          (approach (pworld-p pw) (make-posn (+(posn-x(pworld-goal pw))
                                               (abs(* 2(posn-x(pworld-goal pw)))))
                                             (posn-y(pworld-goal pw)))s)
          (make-posn (+(posn-x(pworld-goal pw)) (abs (* 2(posn-x(pworld-goal pw)))))
                     (posn-y(pworld-goal pw))))]
        
        [(>=(posn-y(pworld-p pw)) height)
         (make-pworld
          (approach (pworld-p pw) (make-posn (posn-x(pworld-goal pw))
                                             (-(posn-y(pworld-goal pw)) (* 2(posn-y(pworld-goal pw))))) s)
          (make-posn (posn-x(pworld-goal pw)) 
                     (-(posn-y(pworld-goal pw)) (* 2(posn-y(pworld-goal pw))))))]
        [(>=(posn-y(pworld-p pw)) 0) 
         (make-pworld
          (approach (pworld-p pw) (make-posn (posn-x(pworld-goal pw))
                                             (+(posn-y(pworld-goal pw)) (abs (* 2(posn-y(pworld-goal pw)))))) s)
          (make-posn (posn-x(pworld-goal pw)) 
                     (+(posn-y(pworld-goal pw)) (abs(* 2(posn-y(pworld-goal pw)))))))]