#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 121 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 96 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 31
31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 4304 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 203
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname |evolutio"
 #"n-sim(showcase-version)|) (read-case-sensitive #t) (teachpacks ()) ("
 #"htdp-settings #(#t constructor repeating-decimal #t #t none #f () #f"
 #")))"
) 0 0 4 29 1 #"\n"
0 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 13 #"racket/shared"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 13 #"racket/string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 22 3 3 #"700"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 22 3 3 #"700"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"background"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn3"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn4"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"posn-sum"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"posn-sum"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";posn-sum: Posn Posn -> Posn"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";takes in two Posns and computes sum"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"posn-sum"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #"("
0 0 14 3 1 #"+"
0 0 25 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 2 #")("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 25 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 2 #")("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";posn-dif Posn Posn -> Posn"
0 0 25 29 1 #"\n"
0 0 17 3 73
(
 #";takes a Posn and a Posn and computes difference between second and "
 #"first"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"posn-diff"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn2"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"posn-diff"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn3"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"posn-diff"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #"("
0 0 14 3 1 #"-"
0 0 25 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #")("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #")("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";posn-scale: Number Posn -> Posn"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";takes in a Number and a Posn and scales Posn by Number"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"posn-scale"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"posn-scale"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 1 #" "
0 0 22 3 3 #"300"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"posn-scale"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #"; dist : Posn Posn -> Number"
0 0 25 29 1 #"\n"
0 0 17 3 41 #"; computes the distance between two Posns"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn1"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn2"
0 0 25 3 4 #" ) ("
0 0 14 3 4 #"sqrt"
0 0 25 3 1 #" "
0 0 22 3 3 #"800"
0 0 25 3 2 #") "
0 0 22 3 20 #"#i28.284271247461902"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn3"
0 0 25 3 1 #" "
0 0 14 3 5 #"posn4"
0 0 25 3 4 #" ) ("
0 0 14 3 4 #"sqrt"
0 0 25 3 1 #" "
0 0 22 3 4 #"2738"
0 0 25 3 2 #") "
0 0 22 3 19 #"#i52.32590180780452"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 3 #"sqr"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #"; direction : Posn Posn -> Posn"
0 0 25 29 1 #"\n"
0 0 17 3 40 #"; computes the direction from p to goal,"
0 0 25 29 1 #"\n"
0 0 17 3 59
#"; represented as a Posn whose distance from the origin is 1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"direction"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"230"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 4 #"-3/5"
0 0 25 3 1 #" "
0 0 22 3 4 #"-4/5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"direction"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"170"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"3/5"
0 0 25 3 1 #" "
0 0 22 3 4 #"-4/5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"direction"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"230"
0 0 25 3 1 #" "
0 0 22 3 3 #"160"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 4 #"-3/5"
0 0 25 3 1 #" "
0 0 22 3 3 #"4/5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"direction"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"170"
0 0 25 3 1 #" "
0 0 22 3 3 #"160"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"3/5"
0 0 25 3 1 #" "
0 0 22 3 3 #"4/5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"direction"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 4 #"goal"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"posn-scale"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 4 #"goal"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"posn-diff"
0 0 25 3 1 #" "
0 0 14 3 4 #"goal"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #"; approach-helper : Posn Posn Number -> Posn"
0 0 25 29 1 #"\n"
0 0 17 3 100
(
 #"; takes a Posn a Posn and a Number and returns a posn at the next co"
 #"ordinate at designated speed (s)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"approach-helper"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"230"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 8          10 22 7 #"1141/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 8          10 22 7 #"1188/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"approach-helper"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"230"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #") "
0 0 22 3 2 #"40"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"206"
0 0 25 3 1 #" "
0 0 22 3 3 #"208"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"approach-helper"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 4 #"goal"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"posn-sum"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"posn-scale"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 9 #"direction"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 4 #"goal"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";A Pworld is a (make-pworld p goal)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"pworld"
0 0 25 3 2 #" ["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 4 #"goal"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"init-state"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"256"
0 0 25 3 1 #" "
0 0 22 3 3 #"256"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"257"
0 0 25 3 1 #" "
0 0 22 3 3 #"257"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"230"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"170"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";draw-pworld: Pworld -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";takes a Pworld and returns image with field p as player"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"draw-pworld"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld1"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 3 #"230"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 1 #" "
0 0 14 3 10 #"background"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"draw-pworld"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld2"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 3 #"170"
0 0 25 3 1 #" "
0 0 22 3 3 #"240"
0 0 25 3 1 #" "
0 0 14 3 10 #"background"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"draw-pworld"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #")) "
0 0 14 3 10 #"background"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";within-screen: Pworld -> Pworld"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";if goal is outside of frame, make goal within frame"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"within-screen"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #"("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #")) "
0 0 14 3 5 #"width"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #"("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #"("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #")) "
0 0 14 3 6 #"height"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #"("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 3 12 #"            "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";move-player: Pworld -> Pworld"
0 0 25 29 1 #"\n"
0 0 17 3 78
(
 #";takes in a Pworld and outputs updated with player approaching goal "
 #"at s speed"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"make-pworld"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 8 #"approach"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #") ("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #" "
0 0 14 3 2 #"pw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";approach: Posn Posn Number -> Posn"
0 0 25 29 1 #"\n"
0 0 17 3 74
(
 #";takes Posn (player) a Posn (goal) and a Number (speed) and returns "
 #"a Posn"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"approach"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"approach"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"approach"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 3 #" ( "
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          ( "
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          ( "
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          ( "
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 5 #")) ) "
0 0 14 3 2 #"p2"
0 0 25 3 2 #" ]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 15 #"approach-helper"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";SIM-WORLD BEGIN"
0 0 25 29 1 #"\n"
0 0 17 3 157
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 100
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; DEFINITIONS and CONSTANTS ;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"slice"
0 0 25 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 12 #"\"Dark Green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"325"
0 0 25 3 1 #" "
0 0 22 3 3 #"400"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"220"
0 0 25 3 1 #" "
0 0 22 3 3 #"113"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld5"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 2 #"34"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"124"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";a Food is a (make-posn Number Number)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"food1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"226"
0 0 25 3 1 #" "
0 0 22 3 3 #"238"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"food2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"103"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"food3"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 3 #"400"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";a traits is a (make-traits Number Number Number Number)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; speed is a Number 1 - 7"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";; sight is a Number 1 - 15"
0 0 25 29 1 #"\n"
0 0 17 3 53 #"; - sight pixel distance = sight-trait * sight-factor"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; size is a Number 1 - 15"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";; health is a Number 1 - 100"
0 0 25 29 1 #"\n"
0 0 17 3 74
(
 #";; gene is a Genomic code (String) used for tracking offspring of th"
 #"e form"
) 0 0 25 29 1 #"\n"
0 0 17 3 36 #"; - (letter [A-Z]) (Number [1-1000])"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; - Examples: F20, A45, B67"
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; - Non-examples: 20Z, 500A, A2000"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"traits"
0 0 25 3 2 #" ["
0 0 14 3 5 #"speed"
0 0 25 3 1 #" "
0 0 14 3 5 #"sight"
0 0 25 3 1 #" "
0 0 14 3 4 #"size"
0 0 25 3 1 #" "
0 0 14 3 6 #"health"
0 0 25 3 1 #" "
0 0 14 3 4 #"gene"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;; FIRST EPOCH"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";(define A (make-traits 7 9 8 100 \"A1\"))"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";(define B (make-traits 5 15 5 100 \"B1\"))"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";(define C (make-traits 4 9 15 100 \"C1\"))"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";(define D (make-traits 4 15 15 100 \"D1\"))"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";(define E (make-traits 5 11 12 100 \"E1\"))"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";(define F (make-traits 4 12 12 100 \"F1\"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"A"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"A1\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"B"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"B1\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"C1\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"D"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"D1\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"E"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"F"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"F1\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #"; a sim is a (make-sim pworld traits)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"sim"
0 0 25 3 2 #" ["
0 0 14 3 6 #"pworld"
0 0 25 3 1 #" "
0 0 14 3 6 #"traits"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"simA"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 1 #" "
0 0 14 3 1 #"A"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"simB"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 1 #" "
0 0 14 3 1 #"B"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"simC"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"simD"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 1 #" "
0 0 14 3 1 #"D"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"simE"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 1 #" "
0 0 14 3 1 #"E"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"simF"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 12 #"pworld-start"
0 0 25 3 1 #" "
0 0 14 3 1 #"F"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"first-food"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";a sims is a ListOfSim"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";a field is one of"
0 0 25 29 1 #"\n"
0 0 17 3 8 #"; - Food"
0 0 25 29 1 #"\n"
0 0 17 3 19 #"; - Food ListOfFood"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";a world is a (make-world field sims)"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";a phase is a (make-phase Number Number)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";a timer is a Number (number of phases in big-bang)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"phase"
0 0 25 3 2 #" ["
0 0 14 3 5 #"timer"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"world"
0 0 25 3 2 #" ["
0 0 14 3 5 #"phase"
0 0 25 3 1 #" "
0 0 14 3 5 #"field"
0 0 25 3 1 #" "
0 0 14 3 4 #"sims"
0 0 25 3 1 #" "
0 0 14 3 4 #"dead"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";counter: Phase -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";keeps phase count"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"counter"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 25 3 2 #" ("
0 0 14 3 11 #"phase-timer"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 22 3 2 #"28"
0 0 25 3 3 #")) "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"init-world1"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phase"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 10 #"first-food"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"simA"
0 0 25 3 1 #" "
0 0 14 3 4 #"simB"
0 0 25 3 1 #" "
0 0 14 3 4 #"simC"
0 0 25 3 1 #" "
0 0 14 3 4 #"simD"
0 0 25 3 1 #" "
0 0 14 3 4 #"simE"
0 0 25 3 1 #" "
0 0 14 3 4 #"simF"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;; WORLD DRAWING ;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 56 #"; convert : Number Number Number Number Number -> Number"
0 0 25 29 1 #"\n"
0 0 17 3 63
#"; return what a should become according to linear interpolation"
0 0 25 29 1 #"\n"
0 0 17 3 36 #"; if a1 becomes b1 and a2 becomes b2"
0 0 25 29 1 #"\n"
0 0 17 3 39 #"; *Assumption*: a1 and a2 are different"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"32"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 3 #"212"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"32"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"32"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 3 #"212"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 2 #") "
0 0 22 3 3 #"122"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"32"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 3 #"212"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #") "
0 0 22 3 3 #"212"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 25 3 1 #" "
0 0 14 3 2 #"a1"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 1 #" "
0 0 14 3 2 #"a2"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 2 #"a2"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 2 #"a1"
0 0 25 3 5 #"))) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 2 #"a2"
0 0 25 3 1 #" "
0 0 14 3 2 #"a1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";health-color: traits -> RGB value"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";determines sim color for health value"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"health-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 13 #"traits-health"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"250"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-color"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"250"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 3 #"250"
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                          "
0 0 22 3 1 #"0"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";draw-sims: sims -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";draws just sims on background height * width"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"draw-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-size"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                ("
0 0 14 3 12 #"health-color"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))) ("
0 0 14 3 6 #"posn-y"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"y"
0 0 25 3 3 #")) "
0 0 14 3 10 #"background"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #" )) "
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                             "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";draw-world: world -> image"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 5 #"slice"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 7 #"counter"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")) "
0 0 22 3 2 #"30"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 9 #"draw-sims"
0 0 25 3 2 #" ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 107
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; SIM MOVEMENT and SIG"
 #"HT ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"sight-factor"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";in-sight?: Sim Field -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";returns true if food is in sight, false if not"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"in-sight?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 1 #"f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 1 #"*"
0 0 25 3 1 #"("
0 0 14 3 12 #"traits-sight"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 12 #"sight-factor"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 3 #"lof"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";in-sight: Sim Field -> Field"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #";takes a sim and field and returns all food which are in sight of si"
 #"m"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-sight"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 1 #"f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #"("
0 0 14 3 12 #"traits-sight"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 12 #"sight-factor"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 3 #"lof"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";reached-goal?: Sim -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"reached-goal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 4 #"dist"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 11 #"pworld-goal"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))) ("
0 0 14 3 11 #"traits-size"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";reached-food?: sim lof -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";determines if a sim has reached given food"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 78
(
 #"                                                                    "
 #"          "
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"reached-food?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 1 #"("
0 0 14 3 4 #"dist"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 11 #"traits-size"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #")))) "
0 0 14 3 3 #"lof"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";next-goal: Sim Field -> Sim"
0 0 25 29 1 #"\n"
0 0 17 3 112
(
 #";takes a sim which needs updated goal and field and returns sim with"
 #" updated goal as first in-sight food in list"
) 0 0 25 29 1 #"\n"
0 0 17 3 71
(
 #";;;;;;;;;;;;;;;; If no food is in sight, sim continues in straight l"
 #"ine"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"next-goal"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 9 #"in-sight?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-sight"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 5 #"))) ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #"("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";update-goal: Sim Field -> Sim"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";updates goal if needed, does nothing if not"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-goal"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 13 #"reached-goal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 13 #"reached-food?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 3 #") ("
0 0 14 3 9 #"in-sight?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"next-goal"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";update-goals: World -> World"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";updates all goals using update-goal"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-goals"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 11 #"update-goal"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 5 #"))) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";move-sims: World  -> Sims"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";moves all sims toward goal at their traits speed"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"move-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 25 3 2 #" ("
0 0 14 3 13 #"within-screen"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"traits-speed"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 104
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; SIM HEALTH ;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"death-rate"
0 0 25 3 1 #" "
0 0 22 3 3 #".13"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"food/health-rate"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";add-health: w -> Sims"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";adds 1 to health when food is reached"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"add-health"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 13 #"reached-food?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 66
#"                                                                 ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 76
(
 #"                                                                    "
 #"       ("
) 0 0 14 3 11 #"make-traits"
0 0 25 29 1 #"\n"
0 0 25 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 12 #"traits-speed"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 12 #"traits-sight"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 11 #"traits-size"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 16 #"food/health-rate"
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 11 #"traits-gene"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 65
#"                                                                ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"])) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";remove-health: World -> World"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";removes death-rate each phase"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"remove-health"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 69
(
 #"                                                                    "
 #"("
) 0 0 14 3 11 #"make-traits"
0 0 25 29 1 #"\n"
0 0 25 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 12 #"traits-speed"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 12 #"traits-sight"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 11 #"traits-size"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 10 #"death-rate"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 11 #"traits-gene"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 7 #"))))) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";update-health: World -> World"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"update-health"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"remove-health"
0 0 25 3 2 #" ("
0 0 14 3 10 #"add-health"
0 0 25 3 2 #" ("
0 0 14 3 9 #"send-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";send-dead: World -> World"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";sends all sims with less than 0 health to dead"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"send-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 5 #"))) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 100
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; SIM FERTILITY ;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"fertility-rate"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"mutation-rate"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"improvement-rate"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"decay-rate"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";fertile?: Sim -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";determines if a sim is fertile"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"fertile?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 22 3 5 #"10000"
0 0 25 3 2 #") "
0 0 14 3 14 #"fertility-rate"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";any-fertile?: Sims -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";determines if any sims are fertile"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"any-fertile?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 8 #"fertile?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";mutate?: Sim -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";determines if fertile sim will give birth to mutated offspring"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"mutate?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #") "
0 0 14 3 13 #"mutation-rate"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";mutate: Sim -> Sim"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";returns mutated offspring of given sim"
0 0 25 29 1 #"\n"
0 0 17 3 78
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; MUTATION ;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"mutate"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 11 #"make-traits"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 12 #"traits-speed"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 10 #"decay-rate"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 12 #"traits-speed"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 16 #"improvement-rate"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 6 #"random"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 12 #"traits-sight"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 10 #"decay-rate"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 12 #"traits-sight"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 16 #"improvement-rate"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 6 #"random"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-size"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-size"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 14 3 16 #"improvement-rate"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                         "
0 0 22 3 3 #"100"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 11 #"mutate-gene"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";give-birth: Sims -> Sims"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #";returns only offspring of fertile sims (give filtered fertile? list"
 #")"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"give-birth"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"mutate?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 6 #"mutate"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-pworld"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 61
#"                                                            ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 11 #"make-traits"
0 0 25 3 2 #" ("
0 0 14 3 12 #"traits-speed"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 12 #"traits-sight"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 11 #"traits-size"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 22 3 2 #"70"
0 0 25 3 1 #" "
0 0 22 3 3 #"110"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 9 #"edit-gene"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 9 #")))))])) "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";edit-gene: gene -> gene"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";adds 1 to given gene code"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"edit-gene"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"A10\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 5 #"\"A11\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"edit-gene"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"A1\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 4 #"\"A2\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"edit-gene"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 16 #"string-contains?"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                 "
0 0 19 3 3 #"\"M\""
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #"("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 9 #" )))))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";mutate-gene: gene -> gene"
0 0 25 29 1 #"\n"
0 0 17 3 75
(
 #";adds M1 if gene has never mutated, adds 1 each subsequent mutated m"
 #"utation"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"mutate-gene"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 16 #"string-contains?"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                 "
0 0 19 3 3 #"\"M\""
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                 ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #"("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"M1\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";update-offspring: World -> World"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";fertile sims give birth, non-fertile do not"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"update-offspring"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 10 #"give-birth"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 8 #"fertile?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 103
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; SIMS UPDATE ;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";update-sims: w -> World"
0 0 25 29 1 #"\n"
0 0 17 3 70
(
 #";updates goals which have been reached and moves all sims toward goa"
 #"ls"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"move-sims"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-goals"
0 0 25 3 1 #"("
0 0 14 3 16 #"update-offspring"
0 0 25 3 2 #" ("
0 0 14 3 13 #"update-health"
0 0 25 3 2 #" ("
0 0 14 3 9 #"send-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 103
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; FOOD PRODUCTION and DELETION"
 #" ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"field-count"
0 0 25 3 1 #" "
0 0 22 3 2 #"26"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";food-remove: Food Sims -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";determines if food has been reached "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #";(check-expect (food-remove (make-posn 97 33) (list sim4 sim1)) true"
 #")"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"food-reached?"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 1 #"("
0 0 14 3 4 #"dist"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pworld-p"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-pworld"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 11 #"traits-size"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #")))) "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";update-field: W Number -> World"
0 0 25 29 1 #"\n"
0 0 17 3 84
(
 #";removes all food which has been reached by sims, maintains n as con"
 #"stant field size"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 130
(
 #";(check-expect (update-field (make-world (list food1 food2 food3) (l"
 #"ist sim4 sim2 (make-sim (make-pworld (make-posn 100 59) food2)"
) 0 0 25 29 1 #"\n"
0 0 17 3 104
(
 #";                                                                   "
 #"                  (sim-traits sim4))"
) 0 0 25 29 1 #"\n"
0 0 17 3 114
(
 #";                                                                 (m"
 #"ake-sim (make-pworld (make-posn 18 398) food2)"
) 0 0 25 29 1 #"\n"
0 0 17 3 121
(
 #";                                                                   "
 #"                  (sim-traits sim4))))) (list food1))"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"new-food"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 13 #"food-reached?"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 6 #")))) ("
0 0 14 3 11 #"world-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")) "
0 0 14 3 1 #"n"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";new-food: Field Number -> Field"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";if number of food drops below n, new food spawns"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 61
#";;;;;;;;;;;;;;;; SPLIT FIELD INTO QUADRANTS FOR SMOOTHER DIST"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"new-food"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 1 #"("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 2 #") "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lof"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 3 #"lof"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";update-dead: World -> Dead"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";adds all dead sims to dead"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"dead-example"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phase"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"simA"
0 0 25 3 1 #" "
0 0 14 3 4 #"simB"
0 0 25 3 1 #" "
0 0 14 3 4 #"simC"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"A3\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"A2\""
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-dead"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phase"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"simA"
0 0 25 3 1 #" "
0 0 14 3 4 #"simB"
0 0 25 3 1 #" "
0 0 14 3 4 #"simC"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"A2\""
0 0 25 3 4 #"))) "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-sim"
0 0 25 3 1 #" "
0 0 14 3 7 #"pworld4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-traits"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"A2\""
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 13 #"traits-health"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 84
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; WORLD UPDATE ;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"update-world"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-phase"
0 0 25 3 1 #"("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"("
0 0 14 3 11 #"phase-timer"
0 0 25 3 1 #"("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 6 #")))) ("
0 0 14 3 12 #"update-field"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 11 #"field-count"
0 0 25 3 3 #") ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #"("
0 0 14 3 11 #"update-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"world-dead"
0 0 25 3 2 #" ("
0 0 14 3 9 #"send-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 69
(
 #"                                                                    "
 #" "
) 0 0 25 29 1 #"\n"
0 0 17 3 85
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; DRAW TREE ;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";A ListofGene is one of"
0 0 25 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 25 29 1 #"\n"
0 0 17 3 15 #"; - (list Node)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";A Gene is a string of the form"
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; - \"A2M1\""
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; - \"A1\" ....."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";gene-tree: World -> ListOfNode"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gene-tree"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 1 #"g"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"get-gen"
0 0 25 3 1 #" "
0 0 14 3 3 #"gen"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 16 #"string-contains?"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\"M\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #"("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\"M\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 4 #"rest"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\"M\""
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 14 3 3 #"gen"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 3 #"gen"
0 0 25 3 6 #")])) ("
0 0 14 3 10 #"world-sims"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 16 #"string-contains?"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\"M\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #"("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\"M\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 4 #"rest"
0 0 25 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\"M\""
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 14 3 3 #"gen"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 2 #" ("
0 0 14 3 11 #"traits-gene"
0 0 25 3 1 #"("
0 0 14 3 10 #"sim-traits"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 3 #"gen"
0 0 25 3 6 #")])) ("
0 0 14 3 10 #"world-dead"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";draw-gen: World -> Image"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";World -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";draws live tree of generations"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 17 3 27 #";run-pworld: World -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";takes pworld and returns image with draw-pworld, update-pgoal,"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";and move-player"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"stop-phase"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 4 #"8410"
0 0 25 3 3 #")) "
0 0 17 3 10 #";5 minutes"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"run-speed"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"run-sim"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"on-tick"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 11 #"run-n-times"
0 0 25 3 1 #" "
0 0 14 3 9 #"run-speed"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"stop-when"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 10 #"stop-phase"
0 0 25 3 2 #" ("
0 0 14 3 11 #"phase-timer"
0 0 25 3 1 #"("
0 0 14 3 11 #"world-phase"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"run-n-times"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 3 #"\".\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 1 #"w"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"run-n-times"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 12 #"update-world"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 6 #"))])))"
0 0 25 29 1 #"\n"
0           0
